@model RoleItemsViewModel

@Html.Partial(Mvc.View.Setting.ListItems, Dom.EntityType.Role.Id)

@if (UserContext.HasAccess(Dom.EntityType.Role.Id, Dom.AccessType.Create))
{
	<div class="button-add">
		<button type="button" class="btn btn-primary" data-href="@Url.Action(Mvc.Controller.Role.Add, Mvc.Controller.Role.Name)">
			@StyleContext.GetTranslation(Dom.Translation.Common.Add)
		</button>
	</div>
}

@Html.Partial(Mvc.View.Role.ListItems, Model)

<div class="results">
	<span>@StyleContext.GetTranslation(Dom.Translation.Role.CountOfRoles) @Model.Count</span>
</div>

<nav aria-label="...">
	<ul class="pager">
		@if (Model.Filter.Skip > 0)
		{
			<li>
				<a href="@Url.Action(Mvc.Controller.Role.List, Mvc.Controller.Role.Name, new {skip = Model.Filter.Skip - Dom.Pagination.P30 >= 0 ? Model.Filter.Skip - Dom.Pagination.P30 : 0})">
					<span aria-hidden="true">&larr;</span> @StyleContext.GetTranslation(Dom.Translation.Common.Previous)
				</a>
			</li>
		}
		@if (Model.Count > Model.Filter.Skip + Dom.Pagination.P30)
		{
			<li>
				<a href="@Url.Action(Mvc.Controller.Role.List, Mvc.Controller.Role.Name, new {skip = Model.Filter.Skip + Dom.Pagination.P30})">
					@StyleContext.GetTranslation(Dom.Translation.Common.Next) <span aria-hidden="true">&rarr;</span>
				</a>
			</li>
		}
	</ul>
</nav>